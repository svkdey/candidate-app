{"version":3,"sources":["component/layout/SearchBar.js","actions/types.js","actions/applicationAction.js","component/layout/Preloader.js","component/DashBoard/DonutComponent.js","component/DashBoard/PieComponent.js","component/DashBoard/BarchartComponent.js","component/DashBoard/Left.js","component/DashBoard/HorizontalCard.js","component/DashBoard/Right.js","component/DashBoard/DashBaord.js","component/layout/AddBtn.js","component/Modal/SelectTechnology.js","component/Modal/SelectRole.js","component/Modal/AddCandidateApplicationModal.js","reducers/applicationsReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["connect","props","className","ERROR","setLoading","type","Preloader","DonutComponent","securityCount","backendCount","frontendCount","devopsCount","console","log","data","labels","datasets","backgroundColor","hoverBackgroundColor","PieComponent","sde1Count","sde2Count","sde3Count","sde4Count","BarchartComponent","this","name","candidate","appliedCount","inprogressCount","completeCount","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","PureComponent","Left","HorizontalCard","candidateDetails","id","date","surname","role","technology","contact","email","status","Right","candidatelist","length","reverse","map","item","key","jsfiddleUrl","DashBaord","dispatch","a","axios","get","headers","res","payload","applications","loading","list","undefined","forEach","Component","state","AddBtn","href","t","value","modalStyle","heigth","useState","setName","setSurname","setEmail","setContact","setStatus","setRole","setTechnology","onSubmitForm","M","toast","html","uuidv4","Date","formData","application","post","dataSent","style","onChange","e","target","required","htmlFor","maxLength","disabled","onClick","initialState","current","error","isFromSubmissionSuccess","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99b5d3dd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nconst SearchBox = (props) => {\r\n\r\n    return (\r\n        <nav className=\"blue\">\r\n            <div className=\"nav-wrapper container header\">\r\n                Candidate Portal\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default connect(null, null)(SearchBox)\r\n","export const GET_APPLICATIONS = 'GET_APPLICATIONS';\r\nexport const ADD_APPLICATION = 'ADD_APPLICATION';\r\n\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\n\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const ERROR = 'LOGS_ERROR';\r\n","import { GET_APPLICATIONS, ADD_APPLICATION, ERROR, SET_LOADING, CLEAR_CURRENT } from './types';\r\nimport axios from 'axios';\r\nexport const getApplcations = () => {\r\n    return async (dispatch) => {\r\n        setLoading();\r\n        try {\r\n\r\n            const res = await axios.get('https://cors-anywhere.herokuapp.com/https://candidate-app-telstra.herokuapp.com/api/get-applications', {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n            dispatch({\r\n                type: GET_APPLICATIONS,\r\n                payload: res.data\r\n            })\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    }\r\n}\r\n\r\nexport const clearCurrent = (application) => {\r\n    return {\r\n        type: CLEAR_CURRENT,\r\n    }\r\n}\r\n\r\nexport const addApplication = (application) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            setLoading();\r\n            const res = await axios.post('https://cors-anywhere.herokuapp.com/https://candidate-app-telstra.herokuapp.com/api/post-applications', application, {\r\n                headers: {\r\n                    'Content-Type': \"application/json\",\r\n                }\r\n            });\r\n            console.log(res);\r\n            dispatch({\r\n                type: ADD_APPLICATION,\r\n                payload: { ...res, dataSent: application }\r\n            })\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ERROR,\r\n                payload: error\r\n            })\r\n        }\r\n\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"spinner-layer spinner-red\">\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n            <h3>Loading...</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nexport default function DonutComponent(props) {\r\n    const { securityCount, backendCount, frontendCount, devopsCount } = props;\r\n    console.log(props)\r\n    var data = {\r\n        labels: [\r\n            'BACK END', 'FRONT END', 'DEVOPS', 'SECURITY'\r\n        ],\r\n        datasets: [{\r\n\r\n            data: [backendCount, frontendCount, devopsCount, securityCount],\r\n            backgroundColor: [\r\n                'rgba(234, 4, 4,.7)',\r\n                'rgba(255,99,132,0.7)',\r\n                'rgba(5, 84, 162,.7)',\r\n                'rgb(242, 246, 8,.7)'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                'rgba(234, 4, 4,.9)',\r\n                'rgba(255,99,132,0.9)',\r\n                'rgba(5, 84, 162,.9)',\r\n                'rgb(242, 246, 8,.9)'\r\n            ]\r\n        }]\r\n    };\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"heading\">Technology Wise Stats</div>\r\n            <Doughnut data={data} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Pie } from 'react-chartjs-2';\r\nexport default function PieComponent(props) {\r\n    const { sde1Count, sde2Count, sde3Count, sde4Count } = props;\r\n    console.log(props)\r\n    var data = {\r\n        labels: [\r\n            'SDE 1',\r\n            'SDE 2',\r\n            'SDE 3',\r\n            'SDE 4',\r\n        ],\r\n        datasets: [{\r\n            data: [sde1Count, sde2Count, sde3Count, sde4Count],\r\n            backgroundColor: [\r\n                'rgba(234, 4, 4,.7)',\r\n                'rgba(255,99,132,0.7)',\r\n                'rgba(5, 84, 162,.7)',\r\n                'rgb(242, 246, 8,.7)'\r\n            ],\r\n            hoverBackgroundColor: [\r\n                'rgba(234, 4, 4,.9)',\r\n                'rgba(255,99,132,0.9)',\r\n                'rgba(5, 84, 162,.9)',\r\n                'rgb(242, 246, 8,.9)'\r\n            ]\r\n        }]\r\n    };\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"heading\">Applied Role Wise Stats</div>\r\n            <Pie data={data} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n    BarChart,\r\n    Bar,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid,\r\n    Tooltip,\r\n    Legend\r\n} from \"recharts\";\r\n\r\n\r\n\r\nexport default class BarchartComponent extends PureComponent {\r\n    static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\r\n\r\n\r\n    render() {\r\n        const { appliedCount, inprogressCount, completeCount } = this.props;\r\n        const data = [\r\n            {\r\n                name: 'applied', candidate: appliedCount,\r\n            },\r\n            {\r\n                name: 'in-progress', candidate: inprogressCount,\r\n            },\r\n            {\r\n                name: 'complete', candidate: completeCount,\r\n            },\r\n\r\n        ];\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <BarChart\r\n                    width={300}\r\n                    height={200}\r\n                    data={data}\r\n                    margin={{\r\n                        top: 20, right: 10, left: 0, bottom: 20,\r\n                    }}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"candidate\" fill='rgba(255,99,132,0.4)' />\r\n\r\n                </BarChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport DonutComponent from './DonutComponent'\r\nimport PieComponent from './PieComponent'\r\n\r\nimport BarchartComponent from './BarchartComponent';\r\n\r\nexport default function Left(props) {\r\n    console.log(props)\r\n    const { sde1Count, sde2Count, sde3Count, sde4Count, securityCount, backendCount, frontendCount, devopsCount, appliedCount, inprogressCount, completeCount } = props;\r\n    return (\r\n        <div className=\"main-container-left \">\r\n            {/* <ApplicationSummery appliedCount={appliedCount} inprogressCount={inprogressCount} completeCount={completeCount} /> */}\r\n\r\n\r\n            <div className=\"sub-container-left \"><BarchartComponent appliedCount={appliedCount} inprogressCount={inprogressCount} completeCount={completeCount} /></div>\r\n\r\n            <div className=\"sub-container-left \"><DonutComponent securityCount={securityCount} backendCount={backendCount} frontendCount={frontendCount} devopsCount={devopsCount} /></div>\r\n\r\n            <div className=\"sub-container-left \"> <PieComponent sde1Count={sde1Count} sde2Count={sde2Count} sde3Count={sde3Count} sde4Count={sde4Count} /></div>\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function HorizontalCard(props) {\r\n    const { candidateDetails } = props;\r\n    return (\r\n        <div className=\"card card-margin\">\r\n\r\n            <div className=\"card-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s4\"><span className=\"dark\">#Application ID :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.id}</span>\r\n                    </div>\r\n                    <div className=\"col s4\"><span className=\"dark\"> </span>\r\n\r\n                    </div>\r\n                    <div className=\"col s4\"><span className=\"dark\">  Applied On :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.date}</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s4\"><span className=\"dark\">    Name :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.name} {\" \"}{candidateDetails.surname}</span>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n\r\n                    </div>\r\n                    <div className=\"col s4\"><span className=\"dark\">  Role :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.role}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s4\"><span className=\"dark\">     Technology :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.technology} ENGINEER</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s4\"><span className=\"dark\">   Contact :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.contact}</span>\r\n                    </div>\r\n                    <div className=\"col s4\"><span className=\"dark\">            Email :</span>\r\n                        <span className=\"dark2\">{\" \"}{candidateDetails.email}</span>\r\n                    </div>\r\n                    <div className=\"col s4\">\r\n                        <span className=\"dark\">  Application Status :</span>\r\n                        <span className={`dark2 ${candidateDetails.status}`}>{\" \"}{candidateDetails.status}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { HorizontalBar } from 'react-chartjs-2';\r\nimport HorizontalCard from './HorizontalCard';\r\n\r\nexport default function Right(props) {\r\n    const { candidatelist } = props;\r\n    //  console.log(candidatelist);\r\n    const fetchList = () => {\r\n        if (candidatelist.length > 0) {\r\n            return candidatelist.reverse().map((item, key) => {\r\n                return <HorizontalCard candidateDetails={item} key={key} />\r\n            })\r\n        }\r\n        return <div>\r\n            No Data found!\r\n        </div>\r\n    }\r\n    return (\r\n        <div className=\"main-container-right \">\r\n            <div className=\"wrapper-right scroller\">{fetchList()}</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getApplcations } from '../../actions/applicationAction'\r\nimport Preloader from '../layout/Preloader'\r\n\r\nimport Left from './Left';\r\nimport Right from './Right';\r\nclass DashBaord extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(getApplcations());\r\n    }\r\n    render() {\r\n        const { applications, loading } = this.props;\r\n        const list = applications.candidatelist !== undefined ? applications.candidatelist : [];\r\n        console.log(list);\r\n        var sde1Count = 0; var sde2Count = 0;\r\n        var sde3Count = 0;\r\n        var sde4Count = 0;\r\n        var backendCount = 0;\r\n        var frontendCount = 0;\r\n        var devopsCount = 0;\r\n        var securityCount = 0;\r\n        var appliedCount = 0;\r\n        var inprogressCount = 0;\r\n        var completeCount = 0;\r\n        if (list.length > 0) {\r\n            list.forEach(item => {\r\n                if (item.technology === 'BACK END') {\r\n                    backendCount++;\r\n                }\r\n                if (item.technology === 'FRONT END') {\r\n                    frontendCount++;\r\n                }\r\n                if (item.technology === 'DEVOPS') {\r\n                    devopsCount++;\r\n                }\r\n                if (item.technology === 'SECURITY') {\r\n                    securityCount++;\r\n                }\r\n                if (item.status === 'APPLIED') {\r\n                    appliedCount++;\r\n                }\r\n                if (item.status === 'IN PROGRESS') {\r\n                    inprogressCount++;\r\n                }\r\n                if (item.status === 'COMPLETE') {\r\n                    completeCount++;\r\n                }\r\n                if (item.role === 'SDE 1') {\r\n                    sde1Count++;\r\n                }\r\n                if (item.role === 'SDE 2') {\r\n                    sde2Count++;\r\n                }\r\n                if (item.role === 'SDE 3') {\r\n                    sde3Count++;\r\n                }\r\n                if (item.role === 'SDE 4') {\r\n                    sde4Count++;\r\n                }\r\n\r\n            })\r\n        }\r\n        if (loading || applications.length === 0) {\r\n            return <Preloader />\r\n        }\r\n        else return (\r\n            <div>\r\n\r\n\r\n                <div className=\"wrapper-container\">\r\n                    <Left sde1Count={sde1Count} sde2Count={sde2Count} sde3Count={sde3Count} sde4Count={sde4Count} securityCount={securityCount} backendCount={backendCount} frontendCount={frontendCount} devopsCount={devopsCount} appliedCount={appliedCount} inprogressCount={inprogressCount} completeCount={completeCount} />\r\n                    <Right candidatelist={list} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        applications: state.applications.applications,\r\n        loading: state.applications.loading\r\n    }\r\n}\r\nexport default connect(mapStateToProps,)(DashBaord)","import React from 'react'\r\n\r\nconst AddBtn = () => {\r\n    return (\r\n        <div className='fixed-action-btn'>\r\n            <a\r\n                href='#add-log-modal'\r\n                className='btn-floating btn-large blue darken-2 modal-trigger'\r\n            >\r\n                <i className='large material-icons'>add</i>\r\n            </a>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBtn;\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nconst SelectTechnician = (props) => {\r\n    const techs = ['BACK END', 'FRONT END', 'DEVOPS', 'SECURITY']\r\n    return (\r\n\r\n        techs.map((t, key) => (\r\n            <option key={key} value={t}>\r\n                {t}\r\n            </option>\r\n        ))\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, null)(SelectTechnician);\r\n","import React from 'react'\r\n\r\nimport { connect } from 'react-redux';\r\nconst SelectRole = (props) => {\r\n    const roles = ['SDE 1', 'SDE 2', 'SDE 3', 'SDE 4']\r\n    return (\r\n\r\n        roles.map((t, key) => (\r\n            <option key={key} value={t}>\r\n                {t}\r\n            </option>\r\n        ))\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, null)(SelectRole);\r\n","import React, { useState } from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addApplication } from '../../actions/applicationAction';\r\nimport SelectTechnogy from './SelectTechnology';\r\nimport SelectRole from './SelectRole';\r\n\r\nconst AddCandidateApplicationModal = (props) => {\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [contact, setContact] = useState('');\r\n    const [status, setStatus] = useState('APPLIED');\r\n    const [role, setRole] = useState('');\r\n    // const [date, setDate] = useState('');\r\n    const [technology, setTechnology] = useState(\"\");\r\n\r\n    const onSubmitForm = () => {\r\n        if (name === '' || surname === '' || role === '' || technology === '' || contact === '' || email === '' || status === '') {\r\n            M.toast({ html: 'Please fill all the data' });\r\n        } else {\r\n            const id = uuidv4();\r\n            const date = new Date();\r\n            const formData = { id, name, surname, contact, email, role, status, technology, date };\r\n            props.dispatch(addApplication(formData));\r\n            M.toast({ html: `Application ${id} is submitted successfully ! It will be reflected soon` })\r\n\r\n\r\n\r\n\r\n            // console.log(message, tech, attention)\r\n            setName('');\r\n            setSurname('');\r\n            setRole('');\r\n            setStatus('');\r\n            setTechnology('');\r\n            setEmail('');\r\n            setContact('');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4> Add Candidate Details</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} required />\r\n                        <label htmlFor=\"name\" className=\"active\"> Name</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" name=\"surname\" value={surname} onChange={e => setSurname(e.target.value)} required />\r\n                        <label htmlFor=\"surname\" className=\"active\"> Surname</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                        <label htmlFor=\"email\" className=\"active\"> Email Address</label>\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <input type=\"text\" name=\"contact\" value={contact} onChange={e => setContact(e.target.value)} required maxLength={10} />\r\n                        <label htmlFor=\"contact\" className=\"active\"> Contact Number</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s6\">\r\n                        <select className=\"browser-default\" name=\"technology\" value={technology} required onChange={e => setTechnology(e.target.value)} >\r\n                            <option value=\"\" disabled>Select Technician</option>\r\n                            <SelectTechnogy />\r\n                        </select>\r\n\r\n                    </div>\r\n                    <div className=\"input-field col s6\">\r\n                        <select className=\"browser-default\" name=\"role\" value={role} required onChange={e => setRole(e.target.value)} >\r\n                            <option value=\"\" disabled>Select Position</option>\r\n                            <SelectRole />\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <a href=\"#!\" className=\"modal-close waves-effect waves-green btn\"\r\n                    onClick={() => { onSubmitForm() }}\r\n                >Enter</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst modalStyle = {\r\n    width: '75%',\r\n    heigth: '75%'\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        applications: state.applications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(AddCandidateApplicationModal);\r\n","import { GET_APPLICATIONS, ADD_APPLICATION, ERROR, SET_LOADING, CLEAR_CURRENT } from '../actions/types';\r\nconst initialState = {\r\n    applications: [],\r\n    current: null,\r\n    loading: true,\r\n    error: null,\r\n    isFromSubmissionSuccess: false\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state, loading: true\r\n            }\r\n        case ERROR:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case GET_APPLICATIONS:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                applications: action.payload,\r\n                loading: false,\r\n            }\r\n        case ADD_APPLICATION:\r\n            console.log(action.payload)\r\n            if (action.payload.data === 'success') {\r\n                return {\r\n                    ...state,\r\n                    applications: [...state.applications, action.payload.dataSent],\r\n                    loading: false,\r\n                    isFromSubmissionSuccess: true\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n            }\r\n\r\n\r\n        // case SET_CURRENT:\r\n        //     return {\r\n        //         ...state,\r\n        //         current:action.payload\r\n        //     }\r\n\r\n        // case CLEAR_CURRENT:\r\n        //     return {\r\n        //         ...state,\r\n        //         current:null\r\n        //     }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport applicationReducer from './applicationsReducer';\r\n\r\nexport default combineReducers({\r\n    applications: applicationReducer,\r\n\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\nconst initailState={};\r\nconst middleware=[thunk];\r\nconst store = createStore(rootReducer, initailState, \r\n    composeWithDevTools(applyMiddleware(...middleware),)\r\n);\r\n\r\nexport default store;","import React, { useEffect, Fragment } from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\nimport \"./App.css\";\r\nimport SeachBar from './component/layout/SearchBar';\r\nimport DashBaord from './component/DashBoard/DashBaord'\r\nimport AddBtn from './component/layout/AddBtn';\r\nimport AddCandidateApplicationModal from './component/Modal/AddCandidateApplicationModal'\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from '../src/store';\r\nconst App = () => {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  })\r\n  return (\r\n    <Provider store={store}>\r\n      <Fragment>\r\n\r\n        <SeachBar />\r\n        <div className=\"container\">\r\n          <AddBtn />\r\n          <AddCandidateApplicationModal />\r\n          <DashBaord />\r\n        </div>\r\n      </Fragment>\r\n    </Provider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}